name: release cli

on: 
  push:
    tags: 
      - "cli-[0-9]+.[0-9]+.[0-9]+"

env:
  tagName: ${{ github.ref_name }}
  GO_VERSION : "1.22"
  BinaryName: "obocli"

jobs:
  release-oceanbase-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Version variables
        id: set_version_vars
        run: |
          echo "version=$(echo $tagName | grep -P '(\d*\.\d*\.\d*)' --only-matching)" >> $GITHUB_OUTPUT

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }} # The Go version to download (if necessary) and use.

      - name: go mod vendor 
        run: go mod vendor

      - name: Build binary 
        run: make cli-build

      - name: Create zip package
        run: |
          cd bin/
          zip ${{ env.BinaryName }}-${{ env.tagName }}.zip ${{ env.BinaryName }}

      - name: Create release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tagName }}
          release_name: Release ${{ env.tagName }}
          draft: false
          prerelease: false

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/${{ env.BinaryName }}
          asset_name: ${{env.BinaryName}}
          asset_content_type: application/octet-stream
  
      - name: Upload zip package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/${{ env.BinaryName }}-${{ env.tagName }}.zip
          asset_name: ${{ env.BinaryName }}-${{ env.tagName }}.zip
          asset_content_type: application/zip